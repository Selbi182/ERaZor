<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBmRXhpZgAASUkqAAgAAAAEABoBBQABAAAAPgAAABsBBQABAAAA
        RgAAACgBAwABAAAAAgAAADEBAgAQAAAATgAAAAAAAABgAAAAAQAAAGAAAAABAAAAUGFpbnQuTkVUIHYz
        LjIyAP/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIAKsA+gMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAA
        AAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgj
        QrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2
        d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj
        5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIE
        BAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYn
        KCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqi
        o6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEA
        AhEDEQA/AP8AP/ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoo
        ooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoo
        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
        9GgggtI4fFHhzWrrSrbWb608pp31uz162ubyKQwyaW88IuLj9L9U/wCC637Amn6CdYtPEPxP1zUBD5o8
        K6X8NdSh14v5bv8AZxca1eaP4Y84Mqxbj4jFv5kiETmISSx/6m5P41+F+c5dSzGnxjk+XxqU/aTwWcYu
        hleY4eS5uejWweJqRnKrCUZRbw0sRRqe7KhVrU505z+Nnl+MhJweHqSaduanFzg/NSStZ+dmvtJNNL9j
        a+bP2mP2svgh+yb4JuvGXxh8Zabobvp+o3PhzwyJ0k8TeML2whMi6V4e0tN1xd3NxKY4BMUW1t97z3Es
        cEEzp/Oz+0Z/wcI+P9ckvtE/Zd+FWneBtJdbmC38c/FT7P4j8XyJLE6W97Y+ENHvW8K6BfWrskyxalrH
        jmxmkRVlhMW+N/wG+Knxd+Jvxv8AGOo/ED4t+N/EPj/xhqjN9q1vxFfyXk0cBmmuEsNPtxsstI0q3luJ
        ms9H0m2stLshK6WdnAjFa/MeO/pQ8I5HQrYXg6nLirN3zQhiZQr4TI8LNK3tK1erClisfyya5aOCpwo1
        4qbWY0bQc+vD5PiKrTrP2FPdrSVV+SirqOl9Zu8Xb3JK59E/tvftrfEn9tn4tXnj3xfJNovhXTVfTfAn
        gG0v72XRfDWiw3F09tO9rLcy2k3iK9huAdb1aCGFryRUiRVtoIY1+MKKK/gfPs+zXibNsdnmd4yrjsyz
        CvOviK9V9ZNuNOlBe5RoUo2p0KFNRpUaUY06cYxikfS0qUKNONKnHlhBJJdfVvdt7tvVvVhRRRXkGgUU
        UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU
        UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU
        UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU
        UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU
        UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU
        UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAH//Z
</value>
  </data>
</root>